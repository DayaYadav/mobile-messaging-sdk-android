import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.google.gms:google-services:2.1.0-alpha3'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

def getStarDate() {
    def days = new SimpleDateFormat("yyyyMMdd").format(new Date()).toInteger() - 20150630
    def hours = new SimpleDateFormat("HH").format(new Date())
    def minutes = new SimpleDateFormat("mm").format(new Date())
    return ("" + days + hours + minutes).toInteger()
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "org.infobip.mobile.messaging.demo"
        minSdkVersion 14
        targetSdkVersion 23
        versionName version
    }

    compileOptions{
        sourceCompatibility=JavaVersion.VERSION_1_7
        targetCompatibility=JavaVersion.VERSION_1_7
    }


    signingConfigs {
        release {
            storeFile file("${project.hasProperty('signingKeystore') ? project['signingKeystore'] : System.getenv('KEYSTORE')}")
            storePassword "${project.hasProperty('signingKeystorePassword') ? project['signingKeystorePassword'] : System.getenv('KEYSTORE_PASSWORD')}"
            keyAlias "alias_name"
            keyPassword "${project.hasProperty('signingKeystorePassword') ? project['signingKeystorePassword'] : System.getenv('KEYSTORE_PASSWORD')}"
        }
    }

    buildTypes {
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError false
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace("release", (variant.versionName.contains("SNAPSHOT")?"dev":"release")+"-${variant.versionName}")
            )
        }
    }

    artifacts {
        archives file("build/outputs/apk/infobip-mobile-messaging-android-demo-full-${version.contains('SNAPSHOT')?'dev':'release'}-${version}.apk")
    }

    productFlavors {
        full {
            versionCode getStarDate()
        }

        less {
            versionCode (getStarDate() - 1)
        }
    }
}

dependencies {
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.1.1'
    compile 'com.android.support:design:23.1.1'
    compile 'com.google.android.gms:play-services-gcm:8.3.0'
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile(project(':infobip-mobile-messaging-api-java'))
    compile project(':infobip-mobile-messaging-android-sdk')
}
