buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.6'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName project.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        release {
            consumerProguardFiles 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile project(':infobip-mobile-messaging-api-java')
    compile 'com.google.android.gms:play-services-gcm:9.0.1'
    compile 'com.google.android.gms:play-services-location:9.0.1'
    compile 'com.android.support:support-v4:25.3.0'

    androidTestCompile project(':infobip-mobile-messaging-android-test')
    androidTestCompile 'junit:junit:4.12'
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile 'com.nanohttpd:nanohttpd:2.1.0'
    androidTestCompile 'org.skyscreamer:jsonassert:1.3.0'

    testCompile project(':infobip-mobile-messaging-android-test')
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        dependsOn variant.javaCompile
        from variant.javaCompile.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    configurations = ['archives']
    publish = true
    pkg {
        repo = 'maven'
        name = project.name
        userOrg = 'infobip'
        vcsUrl = "https://git.ib-ci.com/projects/MML/repos/infobip-mobile-messaging-android/browse"
        licenses = ['Apache-2.0']
        labels = ['aar', 'android']
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}