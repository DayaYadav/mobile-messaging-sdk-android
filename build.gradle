import java.util.regex.Matcher

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.0.0"
        classpath 'net.researchgate:gradle-release:2.3.4'
    }
}

plugins {
    id "com.jfrog.artifactory" version "4.0.0"
}

allprojects {
    repositories {
        mavenLocal()
        jcenter()
    }

    group 'org.infobip.mobile.messaging.api'
    version '1.0.0-SNAPSHOT'
}

subprojects {
    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'net.researchgate.release'

    def repo = version.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
    def artifactoryUsername = project.hasProperty('artifactoryUsername') ? project['artifactoryUsername'] : System.getenv('ARTIFACTORY_USERNAME')
    def artifactoryPassword = project.hasProperty('artifactoryPassword') ? project['artifactoryPassword'] : System.getenv('ARTIFACTORY_PASSWORD')

    task checkProperties << {
        if (!artifactoryUsername) {
            throw new RuntimeException("Couldn't find artifactoryUsername property. Did you forget to specify it in ~/.gradle/gradle.properties or env.ARTIFACTORY_USERNAME?")
        } else if (!artifactoryPassword) {
            throw new RuntimeException("Couldn't find artifactoryPassword property. Did you forget to specify it in ~/.gradle/gradle.properties or env.ARTIFACTORY_PASSWORD?")
        }
    }

    artifactoryPublish.dependsOn(checkProperties)

    artifactory {
        contextUrl = "http://ci-server.infobip.local/artifactory"
        publish {
            repository {
                repoKey = "${repo}"
                username = "${artifactoryUsername}"
                password = "${artifactoryPassword}"
                maven = true
            }
            defaults {
                publishConfigs('archives')
            }
        }
        resolve {
            repository {
                repoKey = 'repo'
                username = "${artifactoryUsername}"
                password = "${artifactoryPassword}"
                maven = true
            }
        }
    }

    release {
        failOnCommitNeeded = true
        failOnPublishNeeded = true
        failOnSnapshotDependencies = true
        failOnUnversionedFiles = true
        failOnUpdateNeeded = true
        revertOnFail = true
        preCommitText = ''
        preTagCommitMessage = '[Gradle Release Plugin] - pre tag commit: '
        tagCommitMessage = '[Gradle Release Plugin] - creating tag: '
        newVersionCommitMessage = '[Gradle Release Plugin] - new version commit: '
        tagTemplate = '${version}'
        versionPropertyFile = 'gradle.properties'
        versionProperties = []
        buildTasks = ['build']
        versionPatterns = [
                /(\d+)([^\d]*$)/: { Matcher m, Project p -> m.replaceAll("${(m[0][1] as int) + 1}${m[0][2]}") }
        ]
        scmAdapters = [
                net.researchgate.release.GitAdapter
        ]

        git {
            requireBranch = 'master'
            pushToRemote = 'origin'
            pushToBranchPrefix = ''
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
